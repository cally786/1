"""Initial migration

Revision ID: 5392edb7a0ba
Revises: 
Create Date: 2024-11-29 23:49:07.074039

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5392edb7a0ba'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notification')
    op.drop_table('transaction')
    op.drop_table('price_negotiation')
    op.drop_table('equipment')
    op.drop_table('user')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(length=80), nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=120), nullable=False),
    sa.Column('is_admin', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('equipment',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('company', sa.VARCHAR(length=100), nullable=True),
    sa.Column('model', sa.VARCHAR(length=100), nullable=True),
    sa.Column('category', sa.VARCHAR(length=50), nullable=True),
    sa.Column('serial_number', sa.VARCHAR(length=100), nullable=True),
    sa.Column('quantity', sa.INTEGER(), nullable=True),
    sa.Column('available_quantity', sa.INTEGER(), nullable=True),
    sa.Column('unit_price', sa.FLOAT(), nullable=True),
    sa.Column('previous_price', sa.FLOAT(), nullable=True),
    sa.Column('proposed_price', sa.FLOAT(), nullable=True),
    sa.Column('price_change_date', sa.DATETIME(), nullable=True),
    sa.Column('location', sa.VARCHAR(length=200), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.Column('image_filename', sa.VARCHAR(length=255), nullable=True),
    sa.Column('creator_id', sa.INTEGER(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('published_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('price_negotiation',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('equipment_id', sa.INTEGER(), nullable=False),
    sa.Column('old_price', sa.FLOAT(), nullable=False),
    sa.Column('new_price', sa.FLOAT(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('rejection_reason', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('response_date', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('equipment_id', sa.INTEGER(), nullable=False),
    sa.Column('buyer_id', sa.INTEGER(), nullable=False),
    sa.Column('seller_id', sa.INTEGER(), nullable=False),
    sa.Column('quantity', sa.INTEGER(), nullable=False),
    sa.Column('unit_price', sa.FLOAT(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.ForeignKeyConstraint(['buyer_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('recipient_id', sa.INTEGER(), nullable=False),
    sa.Column('message', sa.VARCHAR(length=500), nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), nullable=False),
    sa.Column('read', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('transaction_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['recipient_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
